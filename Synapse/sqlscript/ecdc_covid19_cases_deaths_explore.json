{
	"name": "ecdc_covid19_cases_deaths_explore",
	"properties": {
		"content": {
			"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'ecdc_parquet_format')\n\tCREATE EXTERNAL FILE FORMAT [ecdc_parquet_format]\n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'ecdc_curated_ds')\n\tCREATE EXTERNAL DATA SOURCE [ecdc_curated_ds]\n\tWITH (\n\t\tLOCATION = 'https://adlsvedity.dfs.core.windows.net/curated/'\n\t)\nGO\n\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://adlsvedity.dfs.core.windows.net/curated/ecdc/*.parquet',\n        FORMAT='PARQUET'\n    ) AS [result]\n\n\n\nCREATE EXTERNAL FILE FORMAT ecdc_csv_format\nWITH (\n    FORMAT_TYPE = DELIMITEDTEXT,\n    FORMAT_OPTIONS (\n      FIELD_TERMINATOR = ',',\n      STRING_DELIMITER = '\"',\n      FIRST_ROW = 2,\n      USE_TYPE_DEFAULT = FALSE,\n      ENCODING = 'UTF8' )\n);         \n\n\ncreate schema ecdc\n\ngo\n\ndrop external table ecdc.cases_deaths_ext\n\ncreate external table ecdc.cases_deaths_ext (\n    country  varchar(8000),\n    continent  varchar(8000),\n    source    varchar(8000),\n    population    varchar(8000),\n    year_week VARCHAR(10),\n    country_code varchar(8000),\n    year SMALLINT,\n    month SMALLINT,\n    yearMonth VARCHAR(10),\n    cases bigint,\n    deaths bigint         \n) \nWITH (\n    LOCATION = 'ecdc/cases/*.parquet',\n \tDATA_SOURCE = ecdc_curated_ds,\n\tFILE_FORMAT = ecdc_parquet_format\n\t);\nGO\n\n\n\nselect top 10  *\nfrom  ecdc.cases_deaths_ext as a\n\ndrop table [dbo].[ecdc.cases_deaths_tbl]\n\nselect a.*,a.yearMonth as yearMonths \ninto [dbo].[ecdc.cases_deaths_tbl] \nfrom  ecdc.cases_deaths_ext a;\n\nselect * from [dbo].[ecdc.cases_deaths_tbl]\n\n\nselect continent = ISNULL(continent, 'Total'), cases = sum(isnull(cases,0)), deaths = sum(isnull(deaths,0))\nfrom  ecdc.cases_deaths_ext as a\ngroup by continent --with rollup\norder by cases desc\n\nselect top 20 country = ISNULL(country, 'Total'), cases = sum(isnull(cases,0)), deaths = sum(isnull(deaths,0))\nfrom  ecdc.cases_deaths_ext as a\nwhere country not like '%total%'\ngroup by country --with rollup\norder by cases desc\n\nselect year_week week, cases = sum(isnull(cases,0)), deaths = sum(isnull(deaths,0))\nfrom ecdc.cases_deaths_ext as a\nwhere country_code = 'IND'\ngroup by year_week\norder by year_week\n\n\nselect concat(year,'-',month) year_month, cases = sum(isnull(cases,0)), deaths = sum(isnull(deaths,0))\nfrom ecdc.cases_deaths_ext as a\nwhere country_code = 'IND'\ngroup by cast(concat(year,'-',month,'-01') as date),concat(year,'-',month)\norder by cast(concat(year,'-',month,'-01') as date)\n\nselect concat(year,'-',month) year_month, cases = sum(isnull(cases,0)), deaths = sum(isnull(deaths,0))\nfrom ecdc.cases_deaths_ext as a\nwhere country_code = 'USA'\ngroup by cast(concat(year,'-',month,'-01') as date),concat(year,'-',month)\norder by cast(concat(year,'-',month,'-01') as date)\n\nselect concat(year,'-',month) year_month, cases = sum(isnull(cases,0)), deaths = sum(isnull(deaths,0))\nfrom ecdc.cases_deaths_ext as a\nwhere country_code = 'AUS'\ngroup by cast(concat(year,'-',month,'-01') as date),concat(year,'-',month)\norder by cast(concat(year,'-',month,'-01') as date)\n\n--select concat(SUBSTRING('2021-17', 1, 4),'-', month(DATEADD(wk,cast(SUBSTRING('2021-17', 6, 7) as int),concat(SUBSTRING('2021-17', 1, 4) , '/01/01')))) as date1\n\n\n\nselect  TOP 10  country,\n        cases,\n        prev = LAG(CASES, 7) OVER(partition by country_code order by year,month )\nfrom ecdc.cases_deaths_ext as a\nWHERE country not like '%total%'\norder by cases desc;\nGO\n\nselect  TOP 10 country,\n        current_avg = AVG(CASES) OVER(partition by COUNTRY order by year,month ROWS BETWEEN 7 PRECEDING AND CURRENT ROW  ),\n        prev_avg = AVG(CASES) OVER(partition by COUNTRY order by year,month ROWS BETWEEN 14 PRECEDING AND 7 PRECEDING  )\nfrom ecdc.cases_deaths_ext as a\nWHERE country not like '%total%'\norder by current_avg desc;\nGO\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "poc_sqldw",
				"poolName": "poc_sqldw"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}